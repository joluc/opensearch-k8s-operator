---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: opensearchclusters.opensearch.opster.io
spec:
  group: opensearch.opster.io
  names:
    kind: OpenSearchCluster
    listKind: OpenSearchClusterList
    plural: opensearchclusters
    shortNames:
    - os
    - opensearch
    singular: opensearchcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.health
      name: health
      type: string
    - description: Available nodes
      jsonPath: .status.availableNodes
      name: nodes
      type: integer
    - description: Opensearch version
      jsonPath: .status.version
      name: version
      type: string
    - jsonPath: .status.phase
      name: phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Es is the Schema for the es API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of OpenSearchCluster
            properties:
              bootstrap:
                properties:
                  additionalConfig:
                    additionalProperties:
                      type: string
                    description: Extra items to add to the opensearch.yml, defaults
                      to General.AdditionalConfig
                    type: object
                  affinity:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  initContainers:
                    x-kubernetes-preserve-unknown-fields: true
                  jvm:
                    type: string
                  keystore:
                    items:
                      properties:
                        keyMappings:
                          additionalProperties:
                            type: string
                          description: Key mappings from secret to keystore keys
                          type: object
                        secret:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                          description: Secret containing key value pairs
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  pluginsList:
                    items:
                      type: string
                    type: array
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                  tolerations:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                    type: array
                type: object
              confMgmt:
                description: ConfMgmt defines which additional services will be deployed
                properties:
                  VerUpdate:
                    type: boolean
                  autoScaler:
                    type: boolean
                  smartScaler:
                    type: boolean
                type: object
              dashboards:
                properties:
                  additionalConfig:
                    additionalProperties:
                      type: string
                    description: Additional properties for opensearch_dashboards.yaml
                    type: object
                  additionalVolumes:
                    items:
                      properties:
                        configMap:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0ConfigMapVolumeSource'
                          description: ConfigMap to use to populate the volume
                        csi:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0CSIVolumeSource'
                          description: CSI object to use to populate the volume
                        emptyDir:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0EmptyDirVolumeSource'
                          description: EmptyDir to use to populate the volume
                        name:
                          description: Name to use for the volume. Required.
                          type: string
                        path:
                          description: Path in the container to mount the volume at.
                            Required.
                          type: string
                        projected:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0ProjectedVolumeSource'
                          description: Projected object to use to populate the volume
                        restartPods:
                          description: Whether to restart the pods on content change
                          type: boolean
                        secret:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretVolumeSource'
                          description: Secret to use populate the volume
                        subPath:
                          description: SubPath of the referenced volume to mount.
                          type: string
                      required:
                      - name
                      - path
                      type: object
                    type: array
                  affinity:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  basePath:
                    description: Base Path for Opensearch Clusters running behind
                      a reverse proxy
                    type: string
                  enable:
                    type: boolean
                  env:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                    type: array
                  image:
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                  imagePullSecrets:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  opensearchCredentialsSecret:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                    description: Secret that contains fields username and password
                      for dashboards to use to login to opensearch, must only be supplied
                      if a custom securityconfig is provided
                  pluginsList:
                    items:
                      type: string
                    type: array
                  podSecurityContext:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodSecurityContext'
                    description: Set security context for the dashboards pods
                  replicas:
                    format: int32
                    type: integer
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                  securityContext:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecurityContext'
                    description: Set security context for the dashboards pods' container
                  service:
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      loadBalancerSourceRanges:
                        items:
                          type: string
                        type: array
                      type:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ServiceType'
                        default: ClusterIP
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                    type: object
                  tls:
                    properties:
                      caSecret:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                        description: Optional, secret that contains the ca certificate
                          as ca.crt. If this and generate=true is set the existing
                          CA cert from that secret is used to generate the node certs.
                          In this case must contain ca.crt and ca.key fields
                      enable:
                        description: Enable HTTPS for Dashboards
                        type: boolean
                      generate:
                        description: Generate certificate, if false secret must be
                          provided
                        type: boolean
                      secret:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                        description: Optional, name of a TLS secret that contains
                          ca.crt, tls.key and tls.crt data. If ca.crt is in a different
                          secret provide it via the caSecret field
                    type: object
                  tolerations:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                    type: array
                  version:
                    type: string
                required:
                - replicas
                - version
                type: object
              general:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  additionalConfig:
                    additionalProperties:
                      type: string
                    description: Extra items to add to the opensearch.yml
                    type: object
                  additionalVolumes:
                    description: Additional volumes to mount to all pods in the cluster
                    items:
                      properties:
                        configMap:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0ConfigMapVolumeSource'
                          description: ConfigMap to use to populate the volume
                        csi:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0CSIVolumeSource'
                          description: CSI object to use to populate the volume
                        emptyDir:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0EmptyDirVolumeSource'
                          description: EmptyDir to use to populate the volume
                        name:
                          description: Name to use for the volume. Required.
                          type: string
                        path:
                          description: Path in the container to mount the volume at.
                            Required.
                          type: string
                        projected:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0ProjectedVolumeSource'
                          description: Projected object to use to populate the volume
                        restartPods:
                          description: Whether to restart the pods on content change
                          type: boolean
                        secret:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretVolumeSource'
                          description: Secret to use populate the volume
                        subPath:
                          description: SubPath of the referenced volume to mount.
                          type: string
                      required:
                      - name
                      - path
                      type: object
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: Adds support for annotations in services
                    type: object
                  command:
                    type: string
                  defaultRepo:
                    type: string
                  drainDataNodes:
                    description: Drain data nodes controls whether to drain data notes
                      on rolling restart operations
                    type: boolean
                  httpPort:
                    default: 9200
                    format: int32
                    type: integer
                  image:
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                  imagePullSecrets:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                    type: array
                  keystore:
                    description: Populate opensearch keystore before startup
                    items:
                      properties:
                        keyMappings:
                          additionalProperties:
                            type: string
                          description: Key mappings from secret to keystore keys
                          type: object
                        secret:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                          description: Secret containing key value pairs
                      type: object
                    type: array
                  monitoring:
                    properties:
                      enable:
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      monitoringUserSecret:
                        type: string
                      pluginUrl:
                        type: string
                      scrapeInterval:
                        type: string
                      tlsConfig:
                        properties:
                          insecureSkipVerify:
                            type: boolean
                          serverName:
                            type: string
                        type: object
                    type: object
                  operatorClusterURL:
                    description: |-
                      Operator cluster URL. If set, the operator will use this URL to communicate with OpenSearch
                      instead of the default internal Kubernetes service DNS name.
                    type: string
                  pluginsList:
                    items:
                      type: string
                    type: array
                  podSecurityContext:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodSecurityContext'
                    description: Set security context for the cluster pods
                  securityContext:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecurityContext'
                    description: Set security context for the cluster pods' container
                  serviceAccount:
                    type: string
                  serviceName:
                    type: string
                  setVMMaxMapCount:
                    type: boolean
                  snapshotRepositories:
                    items:
                      properties:
                        name:
                          type: string
                        settings:
                          additionalProperties:
                            type: string
                          type: object
                        type:
                          type: string
                      required:
                      - name
                      - type
                      type: object
                    type: array
                  vendor:
                    enum:
                    - Opensearch
                    - Op
                    - OP
                    - os
                    - opensearch
                    type: string
                  version:
                    type: string
                required:
                - serviceName
                type: object
              initHelper:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                  imagePullSecrets:
                    items:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                    type: array
                  resources:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                  version:
                    type: string
                type: object
              nodePools:
                items:
                  properties:
                    additionalConfig:
                      additionalProperties:
                        type: string
                      type: object
                    affinity:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    component:
                      type: string
                    diskSize:
                      type: string
                    env:
                      items:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                      type: array
                    initContainers:
                      x-kubernetes-preserve-unknown-fields: true
                    jvm:
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    pdb:
                      properties:
                        enable:
                          type: boolean
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                      type: object
                    persistence:
                      description: PersistenceConfig defines options for data persistence
                      properties:
                        emptyDir:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0EmptyDirVolumeSource'
                        hostPath:
                          $ref: '#/definitions/k8s.io~1api~1core~1v1~0HostPathVolumeSource'
                        pvc:
                          properties:
                            accessModes:
                              items:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeAccessMode'
                              type: array
                            storageClass:
                              type: string
                          type: object
                      type: object
                    priorityClassName:
                      type: string
                    probes:
                      properties:
                        liveness:
                          properties:
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelaySeconds:
                              format: int32
                              type: integer
                            periodSeconds:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            timeoutSeconds:
                              format: int32
                              type: integer
                          type: object
                        readiness:
                          properties:
                            command:
                              items:
                                type: string
                              type: array
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelaySeconds:
                              format: int32
                              type: integer
                            periodSeconds:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            timeoutSeconds:
                              format: int32
                              type: integer
                          type: object
                        startup:
                          properties:
                            command:
                              items:
                                type: string
                              type: array
                            failureThreshold:
                              format: int32
                              type: integer
                            initialDelaySeconds:
                              format: int32
                              type: integer
                            periodSeconds:
                              format: int32
                              type: integer
                            successThreshold:
                              format: int32
                              type: integer
                            timeoutSeconds:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    replicas:
                      format: int32
                      type: integer
                    resources:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                    roles:
                      items:
                        type: string
                      type: array
                    sidecarContainers:
                      x-kubernetes-preserve-unknown-fields: true
                    tolerations:
                      items:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                      type: array
                    topologySpreadConstraints:
                      items:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0TopologySpreadConstraint'
                      type: array
                  required:
                  - component
                  - replicas
                  - roles
                  type: object
                type: array
              security:
                description: Security defines options for managing the opensearch-security
                  plugin
                properties:
                  config:
                    properties:
                      adminCredentialsSecret:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                        description: Secret that contains fields username and password
                          to be used by the operator to access the opensearch cluster
                          for node draining. Must be set if custom securityconfig
                          is provided.
                      adminSecret:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                        description: TLS Secret that contains a client certificate
                          (tls.key, tls.crt, ca.crt) with admin rights in the opensearch
                          cluster. Must be set if transport certificates are provided
                          by user and not generated
                      securityConfigSecret:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                        description: Secret that contains the different yml files of
                          the opensearch-security config (config.yml, internal_users.yml,
                          ...)
                      updateJob:
                        description: Specific configs for the SecurityConfig update
                          job
                        properties:
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                        type: object
                    type: object
                  tls:
                    description: Configure tls usage for transport and http interface
                    properties:
                      http:
                        properties:
                          caSecret:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                            description: Optional, secret that contains the ca certificate
                              as ca.crt. If this and generate=true is set the existing
                              CA cert from that secret is used to generate the node
                              certs. In this case must contain ca.crt and ca.key fields
                          customFQDN:
                            description: Custom FQDN to use for the HTTP certificate.
                              If not set, the operator will use the default cluster
                              DNS names.
                            type: string
                          generate:
                            description: If set to true the operator will generate
                              a CA and certificates for the cluster to use, if false
                              secrets with existing certificates must be supplied
                            type: boolean
                          rotateDaysBeforeExpiry:
                            default: -1
                            description: Automatically rotate certificates before
                              they expire, set to -1 to disable
                            type: integer
                          secret:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                            description: Optional, name of a TLS secret that contains
                              ca.crt, tls.key and tls.crt data. If ca.crt is in a
                              different secret provide it via the caSecret field
                        type: object
                      transport:
                        properties:
                          adminDn:
                            description: DNs of certificates that should have admin
                              access, mainly used for securityconfig updates via securityadmin.sh,
                              only used when existing certificates are provided
                            items:
                              type: string
                            type: array
                          caSecret:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                            description: Optional, secret that contains the ca certificate
                              as ca.crt. If this and generate=true is set the existing
                              CA cert from that secret is used to generate the node
                              certs. In this case must contain ca.crt and ca.key fields
                          generate:
                            description: If set to true the operator will generate
                              a CA and certificates for the cluster to use, if false
                              secrets with existing certificates must be supplied
                            type: boolean
                          nodesDn:
                            description: Allowed Certificate DNs for nodes, only used
                              when existing certificates are provided
                            items:
                              type: string
                            type: array
                          perNode:
                            description: Configure transport node certificate
                            type: boolean
                          rotateDaysBeforeExpiry:
                            default: -1
                            description: Automatically rotate certificates before
                              they expire, set to -1 to disable
                            type: integer
                          secret:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                            description: Optional, name of a TLS secret that contains
                              ca.crt, tls.key and tls.crt data. If ca.crt is in a
                              different secret provide it via the caSecret field
                        type: object
                    type: object
                type: object
            required:
            - nodePools
            type: object
          status:
            description: ClusterStatus defines the observed state of Es
            properties:
              availableNodes:
                description: AvailableNodes is the number of available instances.
                format: int32
                type: integer
              componentsStatus:
                items:
                  properties:
                    component:
                      type: string
                    conditions:
                      items:
                        type: string
                      type: array
                    description:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              health:
                description: OpenSearchHealth is the health of the cluster as returned
                  by the health API.
                type: string
              initialized:
                type: boolean
              phase:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              version:
                type: string
            required:
            - componentsStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
